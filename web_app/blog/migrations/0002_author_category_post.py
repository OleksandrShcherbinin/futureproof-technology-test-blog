# Generated by Django 3.0.2 on 2020-09-11 08:49

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('blog', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('slug', models.SlugField(max_length=280, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80)),
                ('slug', models.SlugField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='post title')),
                ('slug', models.SlugField(max_length=300, unique=True)),
                ('source', models.URLField(blank=True, max_length=1024, null=True)),
                ('image', models.ImageField(upload_to='images', verbose_name='main post image')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='datetime of post creation')),
                ('moderated', models.BooleanField(default=False, verbose_name='post allowed to publish')),
                ('published', models.DateTimeField(blank=True, null=True, verbose_name='datetime when post was published')),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('content', models.TextField(verbose_name='post full text')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.Author')),
                ('category', models.ManyToManyField(to='blog.Category')),
            ],
            options={
                'ordering': ['-published'],
            },
        ),
    ]
